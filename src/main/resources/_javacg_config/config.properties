# 处理方法调用时是否解析可能的类型与值
parse.method.call.type.value=true

# 处理类的方法前是否需要先解析构造函数以获取非静态字段可能的值，仅当上面的参数为true时才可以生效
first.parse.init.method.type=true

# 处理方法出现异常时，是否要继续
continue.when.error=true

# 调试日志打印开关
# file代表输出到日志（log_javacg目录中）
# true代表输出到标准输出
debug.print=false

# 记录方法分析耗时的开关（开启后会在输出目录中生成相关文件）
log.method.spend.time=false

# 生成文件的根目录，以"/"或"\\"作为分隔符，末尾是否为分隔符不影响（默认为jar包所在目录）
output.root.path=D:/test

# 生成文件后缀名（默认为.txt）
output.file.ext=

#parser.root.method=com.baomidou.mybatisplus.core.conditions.segments.MergeSegments:getSqlSegment()
parser.root.method=com.styzf.link.parser.stat.CallDataGenerate:handleJar(java.lang.String)
parser.root.method.next=true

#过滤不需要解析的正则表达式
parser.filter.regEx=^(java|com.styzf.link.parser.util.|com.styzf.link.parser.dto.|com.styzf.link.parser.conf.|com.styzf.link.parser.common.enums.|org.apache.bcel.generic.Type:toString()|com.styzf.link.parser.generator|copy.javassist.bytecode).+
parser.filter.next.regEx=^(java|styzf|org.apache.bcel.classfile|copy.javassist.bytecode).+
maven.home=
